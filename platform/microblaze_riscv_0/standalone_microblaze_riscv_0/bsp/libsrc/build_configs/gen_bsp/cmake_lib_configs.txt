-- The C compiler identification is GNU 13.3.0
-- The CXX compiler identification is GNU 13.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Xilinx/2025.1/Vitis/gnu/riscv/nt/riscv64-unknown-elf/bin/riscv64-unknown-elf-gcc.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Xilinx/2025.1/Vitis/gnu/riscv/nt/riscv64-unknown-elf/bin/riscv64-unknown-elf-g++.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- The ASM compiler identification is GNU
-- Found assembler: C:/Xilinx/2025.1/Vitis/gnu/riscv/nt/riscv64-unknown-elf/bin/riscv64-unknown-elf-gcc.exe
-- Configuring done
-- Generating done
-- Build files have been written to: C:/Users/belal/Basys3_Test/Vitis_WS/platform/microblaze_riscv_0/standalone_microblaze_riscv_0/bsp/libsrc/build_configs/gen_bsp
-- Cache values
// Extra Application specific Flags
APPLICATION_SPECIFIC_FLAGS:STRING=

// BOARD
BOARD:STRING=basys3

// Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

// LDFLAGS
CMAKE_CXX_LINK_FLAGS:STRING= -Wl,--gc-sections -march=rv32imfc_zicsr

// LDFLAGS
CMAKE_C_LINK_FLAGS:STRING= -Wl,--gc-sections -march=rv32imfc_zicsr

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/bsp

// CMAKE MACHINE
CMAKE_MACHINE:STRING=artix7

// Size
CMAKE_SIZE:FILEPATH=mb-size

// Specs file path for using CMAKE toolchain files
CMAKE_SPECS_FILE:STRING=C:/Users/belal/Basys3_Test/Vitis_WS/platform/microblaze_riscv_0/standalone_microblaze_riscv_0/bsp/Xilinx.spec

// The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=C:/Users/belal/Basys3_Test/Vitis_WS/platform/microblaze_riscv_0/standalone_microblaze_riscv_0/bsp/microblaze_riscv_toolchain.cmake

// Device Id
DEVICE_ID:STRING=7a35t

// Number of slrs
NUMBER_OF_SLRS:STRING=0x1

// The directory containing a CMake configuration file for SCUGIC.
SCUGIC_DIR:PATH=SCUGIC_DIR-NOTFOUND

// Speed Grade
SPEED_GRADE:STRING=1

// sub dir list
SUBDIR_LIST:STRING=ALL

// ASM FLAGS
TOOLCHAIN_ASM_FLAGS:STRING=  -march=rv32imfc_zicsr_zifencei_zicbom -mabi=ilp32f -DSDT

// CXXFLAGS
TOOLCHAIN_CXX_FLAGS:STRING=  -march=rv32imfc_zicsr_zifencei_zicbom -mabi=ilp32f -DSDT

// CFLAGS
TOOLCHAIN_C_FLAGS:STRING=  -march=rv32imfc_zicsr_zifencei_zicbom -mabi=ilp32f -DSDT

// Flags used by compiler to generate dependency files
TOOLCHAIN_DEP_FLAGS:STRING= -MMD -MP

// Extra CFLAGS
TOOLCHAIN_EXTRA_C_FLAGS:STRING= -O2 -g -ffunction-sections -fdata-sections -Wall -Wextra -fno-tree-loop-distribute-patterns

// Enable Interval Timer
XILTIMER_en_interval_timer:BOOL=OFF

// This parameter is used to select specific timer for sleep functionality
XILTIMER_sleep_timer:STRING=Default

// This parameter is used to select specific timer for tick functionality
XILTIMER_tick_timer:STRING=None

// Yocto based embeddedsw FLOW
YOCTO:BOOL=OFF

// Archiver used to archive libraries for both BSP generation as well as applications.
proc_archiver:STRING=riscv64-unknown-elf-gcc-ar.exe

// Assembler used to assemble both BSP/libraries and applications.
proc_assembler:STRING=riscv64-unknown-elf-gcc

// Compiler used to compile both BSP/libraries and applications.
proc_compiler:STRING=riscv64-unknown-elf-gcc.exe

// Compiler Flags used in BSP and library generation.'-c'flag stands for 'compile and assemble, but do not link'.Without this flag, gcc tries to link the code, which will fail because there is no application involved during libgen.'-O2' can be overwritten by extra compile flags.
proc_compiler_flags:STRING=  -march=rv32imfc_zicsr_zifencei_zicbom -mabi=ilp32f -DSDT;-c

// Extra Compiler Flags used in BSP and library generation
proc_extra_compiler_flags:STRING= -O2 -g -ffunction-sections -fdata-sections -Wall -Wextra -fno-tree-loop-distribute-patterns

// This option is not supported in the Unified Vitis IDE in this version. Change to the classic IDE if you want to use this option
standalone_enable_sw_intrusive_profiling:STRING=None

// Unused option and deprecated
standalone_microblaze_exceptions:STRING=None

// Deprecated in favor of xiltimer
standalone_pmu_sleep_timer:STRING=None

// This option is not supported in the Unified Vitis IDE in this version. Change to the classic IDE if you want to use this option
standalone_profile_timer:STRING=None

// Deprecated in favor of xiltimer
standalone_sleep_timer:STRING=None

// stdin peripheral
standalone_stdin:STRING=axi_uartlite_0

// stdout peripheral
standalone_stdout:STRING=axi_uartlite_0

// Deprecated in favor of xiltimer
standalone_ttc_select_cntr:STRING=None

// This option is not supported in the Unified Vitis IDE in this version. Change to the classic IDE if you want to use this option.
standalone_xpm_support:STRING=None

